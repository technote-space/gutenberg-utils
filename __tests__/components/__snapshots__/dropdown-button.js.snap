// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DropdownButton should render DropdownButton 0: open--0 1`] = `
<div
  className="components-dropdown-button test1-class"
>
  <ForwardRef(IconButton)
    aria-expanded={true}
    aria-haspopup="true"
    aria-pressed={true}
    className="components-dropdown-button__toggle is-active"
    disabled={false}
    icon="dashicons-admin-site"
    label="test1-label"
    onClick={[Function]}
    tooltip="test1-tooltip"
  >
    <ForwardRef(Button)
      aria-expanded={true}
      aria-haspopup="true"
      aria-label="test1-label"
      aria-pressed={true}
      className="components-icon-button components-dropdown-button__toggle is-active"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      <button
        aria-expanded={true}
        aria-haspopup="true"
        aria-label="test1-label"
        aria-pressed={true}
        className="components-button components-icon-button components-dropdown-button__toggle is-active"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        type="button"
      />
    </ForwardRef(Button)>
  </ForwardRef(IconButton)>
  <span>
    <div
      onKeyDown={[Function]}
      tabIndex="-1"
    >
      <div
        onBlur={[Function]}
        onFocus={[Function]}
      >
        <div
          className="components-popover components-dropdown-button__popover test1-content-class is-bottom is-left components-animate__appear is-from-right is-from-top"
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          style={
            Object {
              "left": undefined,
              "top": undefined,
              "visibility": undefined,
            }
          }
        >
          <div
            className="components-popover__content"
            style={
              Object {
                "maxHeight": undefined,
                "maxWidth": undefined,
              }
            }
            tabIndex="-1"
          >
            <div
              className="popover1"
            >
              test1
            </div>
          </div>
        </div>
      </div>
    </div>
  </span>
</div>
`;

exports[`DropdownButton should render DropdownButton 0: test--0 1`] = `
<div
  className="components-dropdown-button test1-class"
>
  <ForwardRef(IconButton)
    aria-expanded={false}
    aria-haspopup="true"
    aria-pressed={true}
    className="components-dropdown-button__toggle is-active"
    disabled={false}
    icon="dashicons-admin-site"
    label="test1-label"
    onClick={[Function]}
    tooltip="test1-tooltip"
  >
    <ForwardRef(Button)
      aria-expanded={false}
      aria-haspopup="true"
      aria-label="test1-label"
      aria-pressed={true}
      className="components-icon-button components-dropdown-button__toggle is-active"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      <button
        aria-expanded={false}
        aria-haspopup="true"
        aria-label="test1-label"
        aria-pressed={true}
        className="components-button components-icon-button components-dropdown-button__toggle is-active"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        type="button"
      />
    </ForwardRef(Button)>
  </ForwardRef(IconButton)>
</div>
`;

exports[`DropdownButton should render DropdownButton 1: open--1 1`] = `
<div
  className="components-dropdown-button test2-class"
>
  <ForwardRef(IconButton)
    aria-expanded={true}
    aria-haspopup="true"
    aria-pressed={false}
    className="components-dropdown-button__toggle"
    disabled={false}
    icon="menu"
    label="test2-label"
    onClick={[Function]}
    tooltip="test2-label"
  >
    <ForwardRef(Button)
      aria-expanded={true}
      aria-haspopup="true"
      aria-label="test2-label"
      aria-pressed={false}
      className="components-icon-button components-dropdown-button__toggle has-text"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      <button
        aria-expanded={true}
        aria-haspopup="true"
        aria-label="test2-label"
        aria-pressed={false}
        className="components-button components-icon-button components-dropdown-button__toggle has-text"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="dashicon dashicons-menu"
          focusable="false"
          height={20}
          role="img"
          viewBox="0 0 20 20"
          width={20}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M17 7V5H3v2h14zm0 4V9H3v2h14zm0 4v-2H3v2h14z"
          />
        </svg>
        <span
          className="components-dropdown-button__indicator"
          key="0,1"
        />
      </button>
    </ForwardRef(Button)>
  </ForwardRef(IconButton)>
  <span>
    <div
      onKeyDown={[Function]}
      tabIndex="-1"
    >
      <div
        onBlur={[Function]}
        onFocus={[Function]}
      >
        <div
          className="components-popover components-dropdown-button__popover test2-content-class is-bottom is-right components-animate__appear is-from-left is-from-top"
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          style={
            Object {
              "left": undefined,
              "top": undefined,
              "visibility": undefined,
            }
          }
        >
          <div
            className="components-popover__content"
            style={
              Object {
                "maxHeight": undefined,
                "maxWidth": undefined,
              }
            }
            tabIndex="-1"
          >
            <fieldset>
              <legend>
                Font Size
              </legend>
              <div
                className="components-font-size-picker__controls"
              >
                <div
                  className="components-base-control components-font-size-picker__select"
                >
                  <div
                    className="components-base-control__field"
                  >
                    <label
                      className="components-base-control__label screen-reader-text"
                      htmlFor="inspector-select-control-0"
                    >
                      Choose preset
                    </label>
                    <select
                      className="components-select-control__input"
                      id="inspector-select-control-0"
                      multiple={false}
                      onChange={[Function]}
                      value="custom"
                    >
                      <option
                        key="test1-test1-0"
                        value="test1"
                      >
                        test1
                      </option>
                      <option
                        key="test2-test2-1"
                        value="test2"
                      >
                        test2
                      </option>
                      <option
                        key="test3-test3-2"
                        value="test3"
                      >
                        test3
                      </option>
                      <option
                        key="Custom-custom-3"
                        value="custom"
                      >
                        Custom
                      </option>
                    </select>
                  </div>
                </div>
                <input
                  aria-label="Custom"
                  className="components-range-control__number"
                  onChange={[Function]}
                  type="number"
                  value={20}
                />
                <ForwardRef(Button)
                  className="components-color-palette__clear"
                  disabled={false}
                  isDefault={true}
                  isSmall={true}
                  onClick={[Function]}
                  type="button"
                >
                  <button
                    className="components-button components-color-palette__clear is-button is-default is-small"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    Reset
                  </button>
                </ForwardRef(Button)>
              </div>
            </fieldset>
          </div>
        </div>
      </div>
    </div>
  </span>
</div>
`;

exports[`DropdownButton should render DropdownButton 1: test--1 1`] = `
<div
  className="components-dropdown-button test2-class"
>
  <ForwardRef(IconButton)
    aria-expanded={false}
    aria-haspopup="true"
    aria-pressed={false}
    className="components-dropdown-button__toggle"
    disabled={false}
    icon="menu"
    label="test2-label"
    onClick={[Function]}
    tooltip="test2-label"
  >
    <ForwardRef(Button)
      aria-expanded={false}
      aria-haspopup="true"
      aria-label="test2-label"
      aria-pressed={false}
      className="components-icon-button components-dropdown-button__toggle has-text"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      <button
        aria-expanded={false}
        aria-haspopup="true"
        aria-label="test2-label"
        aria-pressed={false}
        className="components-button components-icon-button components-dropdown-button__toggle has-text"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="dashicon dashicons-menu"
          focusable="false"
          height={20}
          role="img"
          viewBox="0 0 20 20"
          width={20}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M17 7V5H3v2h14zm0 4V9H3v2h14zm0 4v-2H3v2h14z"
          />
        </svg>
        <span
          className="components-dropdown-button__indicator"
          key="0,1"
        />
      </button>
    </ForwardRef(Button)>
  </ForwardRef(IconButton)>
</div>
`;

exports[`DropdownButton should render DropdownButton 2: test--2 1`] = `
<div
  className="components-dropdown-button test3-class"
>
  <ForwardRef(IconButton)
    aria-expanded={false}
    aria-haspopup="true"
    aria-pressed={false}
    className="components-dropdown-button__toggle"
    disabled={true}
    icon="menu"
    label="test3-label"
    onClick={[Function]}
    tooltip="test3-label"
  >
    <ForwardRef(Button)
      aria-expanded={false}
      aria-haspopup="true"
      aria-label="test3-label"
      aria-pressed={false}
      className="components-icon-button components-dropdown-button__toggle has-text"
      disabled={true}
      onClick={[Function]}
    >
      <button
        aria-expanded={false}
        aria-haspopup="true"
        aria-label="test3-label"
        aria-pressed={false}
        className="components-button components-icon-button components-dropdown-button__toggle has-text"
        disabled={true}
        onClick={[Function]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="dashicon dashicons-menu"
          focusable="false"
          height={20}
          role="img"
          viewBox="0 0 20 20"
          width={20}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M17 7V5H3v2h14zm0 4V9H3v2h14zm0 4v-2H3v2h14z"
          />
        </svg>
        <span
          className="components-dropdown-button__indicator"
        />
      </button>
    </ForwardRef(Button)>
  </ForwardRef(IconButton)>
</div>
`;

exports[`DropdownButton should render DropdownButton 3: open--3 1`] = `
<div
  className="components-dropdown-button test4-class"
>
  <ForwardRef(IconButton)
    aria-expanded={true}
    aria-haspopup="true"
    aria-pressed={false}
    className="components-dropdown-button__toggle"
    disabled={false}
    icon="menu"
    label="test4-label"
    onClick={[Function]}
    tooltip="test4-label"
  >
    <ForwardRef(Button)
      aria-expanded={true}
      aria-haspopup="true"
      aria-label="test4-label"
      aria-pressed={false}
      className="components-icon-button components-dropdown-button__toggle has-text"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      <button
        aria-expanded={true}
        aria-haspopup="true"
        aria-label="test4-label"
        aria-pressed={false}
        className="components-button components-icon-button components-dropdown-button__toggle has-text"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="dashicon dashicons-menu"
          focusable="false"
          height={20}
          role="img"
          viewBox="0 0 20 20"
          width={20}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M17 7V5H3v2h14zm0 4V9H3v2h14zm0 4v-2H3v2h14z"
          />
        </svg>
        <span
          className="components-dropdown-button__indicator"
          key="0,1"
        />
      </button>
    </ForwardRef(Button)>
  </ForwardRef(IconButton)>
  <span>
    <div
      onKeyDown={[Function]}
      tabIndex="-1"
    >
      <div
        onBlur={[Function]}
        onFocus={[Function]}
      >
        <div
          className="components-popover components-dropdown-button__popover test4-content-class is-bottom is-right components-animate__appear is-from-left is-from-top"
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          style={
            Object {
              "left": undefined,
              "top": undefined,
              "visibility": undefined,
            }
          }
        >
          <div
            className="components-popover__content"
            style={
              Object {
                "maxHeight": undefined,
                "maxWidth": undefined,
              }
            }
            tabIndex="-1"
          >
            <div
              className="components-color-palette"
            >
              <div
                className="components-color-palette__item-wrapper"
                key="red"
              >
                <button
                  aria-label="Color: test1"
                  aria-pressed={false}
                  className="components-color-palette__item"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "color": "red",
                    }
                  }
                  type="button"
                />
              </div>
              <div
                className="components-color-palette__item-wrapper"
                key="green"
              >
                <button
                  aria-label="Color: test2"
                  aria-pressed={true}
                  className="components-color-palette__item is-active"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "color": "green",
                    }
                  }
                  type="button"
                />
                <svg
                  aria-hidden="true"
                  className="dashicon dashicons-saved"
                  focusable="false"
                  height={20}
                  role="img"
                  viewBox="0 0 20 20"
                  width={20}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M15.3 5.3l-6.8 6.8-2.8-2.8-1.4 1.4 4.2 4.2 8.2-8.2"
                  />
                </svg>
              </div>
              <div
                className="components-color-palette__item-wrapper"
                key="blue"
              >
                <button
                  aria-label="Color: test3"
                  aria-pressed={false}
                  className="components-color-palette__item"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "color": "blue",
                    }
                  }
                  type="button"
                />
              </div>
              <div
                className="components-color-palette__custom-clear-wrapper"
              >
                <div
                  className="components-color-palette__custom-color"
                >
                  <ForwardRef(Button)
                    aria-expanded={false}
                    aria-label="Custom color picker"
                    isLink={true}
                    onClick={[Function]}
                  >
                    <button
                      aria-expanded={false}
                      aria-label="Custom color picker"
                      className="components-button is-link"
                      onClick={[Function]}
                      type="button"
                    >
                      Custom Color
                    </button>
                  </ForwardRef(Button)>
                </div>
                <ForwardRef(Button)
                  className="components-color-palette__clear"
                  isDefault={true}
                  isSmall={true}
                  onClick={[Function]}
                  type="button"
                >
                  <button
                    className="components-button components-color-palette__clear is-button is-default is-small"
                    onClick={[Function]}
                    type="button"
                  >
                    Clear
                  </button>
                </ForwardRef(Button)>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </span>
</div>
`;

exports[`DropdownButton should render DropdownButton 3: open-color-picker--3 1`] = `
<div
  className="components-dropdown-button test4-class"
>
  <ForwardRef(IconButton)
    aria-expanded={true}
    aria-haspopup="true"
    aria-pressed={false}
    className="components-dropdown-button__toggle"
    disabled={false}
    icon="menu"
    label="test4-label"
    onClick={[Function]}
    tooltip="test4-label"
  >
    <ForwardRef(Button)
      aria-expanded={true}
      aria-haspopup="true"
      aria-label="test4-label"
      aria-pressed={false}
      className="components-icon-button components-dropdown-button__toggle has-text"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      <button
        aria-expanded={true}
        aria-haspopup="true"
        aria-label="test4-label"
        aria-pressed={false}
        className="components-button components-icon-button components-dropdown-button__toggle has-text"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="dashicon dashicons-menu"
          focusable="false"
          height={20}
          role="img"
          viewBox="0 0 20 20"
          width={20}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M17 7V5H3v2h14zm0 4V9H3v2h14zm0 4v-2H3v2h14z"
          />
        </svg>
        <span
          className="components-dropdown-button__indicator"
          key="0,1"
        />
      </button>
    </ForwardRef(Button)>
  </ForwardRef(IconButton)>
  <span>
    <div
      onKeyDown={[Function]}
      tabIndex="-1"
    >
      <div
        onBlur={[Function]}
        onFocus={[Function]}
      >
        <div
          className="components-popover components-dropdown-button__popover test4-content-class is-bottom is-right components-animate__appear is-from-left is-from-top"
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          style={
            Object {
              "left": undefined,
              "top": undefined,
              "visibility": undefined,
            }
          }
        >
          <div
            className="components-popover__content"
            style={
              Object {
                "maxHeight": undefined,
                "maxWidth": undefined,
              }
            }
            tabIndex="-1"
          >
            <div
              className="components-color-palette"
            >
              <div
                className="components-color-palette__item-wrapper"
                key="red"
              >
                <button
                  aria-label="Color: test1"
                  aria-pressed={false}
                  className="components-color-palette__item"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "color": "red",
                    }
                  }
                  type="button"
                />
              </div>
              <div
                className="components-color-palette__item-wrapper"
                key="green"
              >
                <button
                  aria-label="Color: test2"
                  aria-pressed={true}
                  className="components-color-palette__item is-active"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "color": "green",
                    }
                  }
                  type="button"
                />
                <svg
                  aria-hidden="true"
                  className="dashicon dashicons-saved"
                  focusable="false"
                  height={20}
                  role="img"
                  viewBox="0 0 20 20"
                  width={20}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M15.3 5.3l-6.8 6.8-2.8-2.8-1.4 1.4 4.2 4.2 8.2-8.2"
                  />
                </svg>
              </div>
              <div
                className="components-color-palette__item-wrapper"
                key="blue"
              >
                <button
                  aria-label="Color: test3"
                  aria-pressed={false}
                  className="components-color-palette__item"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    Object {
                      "color": "blue",
                    }
                  }
                  type="button"
                />
              </div>
              <div
                className="components-color-palette__custom-clear-wrapper"
              >
                <div
                  className="components-color-palette__custom-color"
                >
                  <ForwardRef(Button)
                    aria-expanded={true}
                    aria-label="Custom color picker"
                    isLink={true}
                    onClick={[Function]}
                  >
                    <button
                      aria-expanded={true}
                      aria-label="Custom color picker"
                      className="components-button is-link"
                      onClick={[Function]}
                      type="button"
                    >
                      Custom Color
                    </button>
                  </ForwardRef(Button)>
                  <span>
                    <div
                      onKeyDown={[Function]}
                      tabIndex="-1"
                    >
                      <div
                        onBlur={[Function]}
                        onFocus={[Function]}
                      >
                        <div
                          className="components-popover components-color-palette__picker is-bottom is-center components-animate__appear is-from-top"
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          style={
                            Object {
                              "left": undefined,
                              "top": undefined,
                              "visibility": undefined,
                            }
                          }
                        >
                          <div
                            className="components-popover__content"
                            style={
                              Object {
                                "maxHeight": undefined,
                                "maxWidth": undefined,
                              }
                            }
                            tabIndex="-1"
                          >
                            <div
                              className="components-color-picker is-alpha-disabled"
                            >
                              <div
                                className="components-color-picker__saturation"
                              >
                                <div>
                                  <div
                                    className="components-color-picker__saturation-color"
                                    onMouseDown={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="application"
                                    style={
                                      Object {
                                        "background": "hsl(120,100%, 50%)",
                                      }
                                    }
                                  >
                                    <div
                                      className="components-color-picker__saturation-white"
                                    />
                                    <div
                                      className="components-color-picker__saturation-black"
                                    />
                                    <button
                                      aria-describedby="color-picker-saturation-0"
                                      aria-label="Choose a shade"
                                      className="components-color-picker__saturation-pointer"
                                      onKeyDown={[Function]}
                                      style={
                                        Object {
                                          "left": "100%",
                                          "top": "50%",
                                        }
                                      }
                                    />
                                    <div
                                      className="screen-reader-text"
                                      id="color-picker-saturation-0"
                                    >
                                      Use your arrow keys to change the base color. Move up to lighten the color, down to darken, left to decrease saturation, and right to increase saturation.
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <div
                                className="components-color-picker__body"
                              >
                                <div
                                  className="components-color-picker__controls"
                                >
                                  <div
                                    className="components-color-picker__swatch"
                                  >
                                    <div
                                      className="components-color-picker__active"
                                      style={
                                        Object {
                                          "backgroundColor": "rgb(0, 128, 0)",
                                        }
                                      }
                                    />
                                  </div>
                                  <div
                                    className="components-color-picker__toggles"
                                  >
                                    <div>
                                      <div
                                        className="components-color-picker__hue"
                                      >
                                        <div
                                          className="components-color-picker__hue-gradient"
                                        />
                                        <div
                                          className="components-color-picker__hue-bar"
                                          onMouseDown={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                        >
                                          <div
                                            aria-describedby="components-color-picker__hue-description-0"
                                            aria-label="Hue value in degrees, from 0 to 359."
                                            aria-orientation="horizontal"
                                            aria-valuemax="1"
                                            aria-valuemin="359"
                                            aria-valuenow={120}
                                            className="components-color-picker__hue-pointer"
                                            onKeyDown={[Function]}
                                            role="slider"
                                            style={
                                              Object {
                                                "left": "33.333333333333336%",
                                              }
                                            }
                                            tabIndex="0"
                                          />
                                          <p
                                            className="components-color-picker__hue-description screen-reader-text"
                                            id="components-color-picker__hue-description-0"
                                          >
                                            Move the arrow left or right to change hue.
                                          </p>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <div
                                  className="components-color-picker__inputs-wrapper"
                                >
                                  <div
                                    className="components-color-picker__inputs-fields"
                                  >
                                    <div
                                      className="components-base-control components-color-picker__inputs-field"
                                    >
                                      <div
                                        className="components-base-control__field"
                                      >
                                        <label
                                          className="components-base-control__label"
                                          htmlFor="inspector-text-control-0"
                                        >
                                          Color value in hexadecimal
                                        </label>
                                        <input
                                          className="components-text-control__input"
                                          id="inspector-text-control-0"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          type="text"
                                          value="#008000"
                                        />
                                      </div>
                                    </div>
                                  </div>
                                  <div
                                    className="components-color-picker__inputs-toggle"
                                  >
                                    <ForwardRef(IconButton)
                                      icon="arrow-down-alt2"
                                      label="Change color format"
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(Button)
                                        aria-label="Change color format"
                                        className="components-icon-button"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                      >
                                        <button
                                          aria-label="Change color format"
                                          className="components-button components-icon-button"
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                          type="button"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="dashicon dashicons-arrow-down-alt2"
                                            focusable="false"
                                            height={20}
                                            role="img"
                                            viewBox="0 0 20 20"
                                            width={20}
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M5 6l5 5 5-5 2 1-7 7-7-7z"
                                            />
                                          </svg>
                                        </button>
                                      </ForwardRef(Button)>
                                    </ForwardRef(IconButton)>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </span>
                </div>
                <ForwardRef(Button)
                  className="components-color-palette__clear"
                  isDefault={true}
                  isSmall={true}
                  onClick={[Function]}
                  type="button"
                >
                  <button
                    className="components-button components-color-palette__clear is-button is-default is-small"
                    onClick={[Function]}
                    type="button"
                  >
                    Clear
                  </button>
                </ForwardRef(Button)>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </span>
</div>
`;

exports[`DropdownButton should render DropdownButton 3: test--3 1`] = `
<div
  className="components-dropdown-button test4-class"
>
  <ForwardRef(IconButton)
    aria-expanded={false}
    aria-haspopup="true"
    aria-pressed={false}
    className="components-dropdown-button__toggle"
    disabled={false}
    icon="menu"
    label="test4-label"
    onClick={[Function]}
    tooltip="test4-label"
  >
    <ForwardRef(Button)
      aria-expanded={false}
      aria-haspopup="true"
      aria-label="test4-label"
      aria-pressed={false}
      className="components-icon-button components-dropdown-button__toggle has-text"
      disabled={false}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      <button
        aria-expanded={false}
        aria-haspopup="true"
        aria-label="test4-label"
        aria-pressed={false}
        className="components-button components-icon-button components-dropdown-button__toggle has-text"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="dashicon dashicons-menu"
          focusable="false"
          height={20}
          role="img"
          viewBox="0 0 20 20"
          width={20}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M17 7V5H3v2h14zm0 4V9H3v2h14zm0 4v-2H3v2h14z"
          />
        </svg>
        <span
          className="components-dropdown-button__indicator"
          key="0,1"
        />
      </button>
    </ForwardRef(Button)>
  </ForwardRef(IconButton)>
</div>
`;
