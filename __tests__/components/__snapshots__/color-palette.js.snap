// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ColorPalette Dropdown .renderContent should render dropdown content 1`] = `
<div
  className="components-color-picker is-alpha-disabled"
>
  <div
    className="components-color-picker__saturation"
  >
    <div>
      <div
        className="components-color-picker__saturation-color"
        onMouseDown={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        role="application"
        style={
          Object {
            "background": "hsl(0,100%, 50%)",
          }
        }
      >
        <div
          className="components-color-picker__saturation-white"
        />
        <div
          className="components-color-picker__saturation-black"
        />
        <button
          aria-describedby="color-picker-saturation-0"
          aria-label="Choose a shade"
          className="components-color-picker__saturation-pointer"
          onKeyDown={[Function]}
          style={
            Object {
              "left": "100%",
              "top": "0%",
            }
          }
        />
        <div
          className="screen-reader-text"
          id="color-picker-saturation-0"
        >
          Use your arrow keys to change the base color. Move up to lighten the color, down to darken, left to decrease saturation, and right to increase saturation.
        </div>
      </div>
    </div>
  </div>
  <div
    className="components-color-picker__body"
  >
    <div
      className="components-color-picker__controls"
    >
      <div
        className="components-color-picker__swatch"
      >
        <div
          className="components-color-picker__active"
          style={
            Object {
              "backgroundColor": "rgb(255, 0, 0)",
            }
          }
        />
      </div>
      <div
        className="components-color-picker__toggles"
      >
        <div>
          <div
            className="components-color-picker__hue"
          >
            <div
              className="components-color-picker__hue-gradient"
            />
            <div
              className="components-color-picker__hue-bar"
              onMouseDown={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
            >
              <div
                aria-describedby="components-color-picker__hue-description-0"
                aria-label="Hue value in degrees, from 0 to 359."
                aria-orientation="horizontal"
                aria-valuemax="1"
                aria-valuemin="359"
                aria-valuenow={0}
                className="components-color-picker__hue-pointer"
                onKeyDown={[Function]}
                role="slider"
                style={
                  Object {
                    "left": "0%",
                  }
                }
                tabIndex="0"
              />
              <p
                className="components-color-picker__hue-description screen-reader-text"
                id="components-color-picker__hue-description-0"
              >
                Move the arrow left or right to change hue.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="components-color-picker__inputs-wrapper"
    >
      <div
        className="components-color-picker__inputs-fields"
      >
        <div
          className="components-base-control components-color-picker__inputs-field"
        >
          <div
            className="components-base-control__field"
          >
            <label
              className="components-base-control__label"
              htmlFor="inspector-text-control-0"
            >
              Color value in hexadecimal
            </label>
            <input
              className="components-text-control__input"
              id="inspector-text-control-0"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyDown={[Function]}
              type="text"
              value="#ff0000"
            />
          </div>
        </div>
      </div>
      <div
        className="components-color-picker__inputs-toggle"
      >
        <ForwardRef(IconButton)
          icon="arrow-down-alt2"
          label="Change color format"
          onClick={[Function]}
        >
          <ForwardRef(Button)
            aria-label="Change color format"
            className="components-icon-button"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <button
              aria-label="Change color format"
              className="components-button components-icon-button"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              type="button"
            >
              <svg
                aria-hidden="true"
                className="dashicon dashicons-arrow-down-alt2"
                focusable="false"
                height={20}
                role="img"
                viewBox="0 0 20 20"
                width={20}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M5 6l5 5 5-5 2 1-7 7-7-7z"
                />
              </svg>
            </button>
          </ForwardRef(Button)>
        </ForwardRef(IconButton)>
      </div>
    </div>
  </div>
</div>
`;

exports[`ColorPalette Dropdown .renderToggle should render dropdown content 1`] = `
<div
  className="components-color-palette"
>
  <div
    className="components-color-palette__item-wrapper"
    key="#f00"
  >
    <Tooltip
      text="red"
    >
      <button
        aria-label="Color: red"
        aria-pressed={true}
        className="components-color-palette__item is-active"
        onClick={[Function]}
        style={
          Object {
            "color": "#f00",
          }
        }
        type="button"
      />
    </Tooltip>
    <Dashicon
      icon="saved"
    />
  </div>
  <div
    className="components-color-palette__item-wrapper"
    key="#fff"
  >
    <Tooltip
      text="white"
    >
      <button
        aria-label="Color: white"
        aria-pressed={false}
        className="components-color-palette__item"
        onClick={[Function]}
        style={
          Object {
            "color": "#fff",
          }
        }
        type="button"
      />
    </Tooltip>
  </div>
  <div
    className="components-color-palette__item-wrapper"
    key="#00f"
  >
    <Tooltip
      text="Color code: #00f"
    >
      <button
        aria-label="Color code: #00f"
        aria-pressed={false}
        className="components-color-palette__item"
        onClick={[Function]}
        style={
          Object {
            "color": "#00f",
          }
        }
        type="button"
      />
    </Tooltip>
  </div>
  <div
    className="components-color-palette__custom-clear-wrapper"
  >
    <Dropdown
      className="components-color-palette__custom-color"
      contentClassName="components-color-palette__picker"
      renderContent={[Function]}
      renderToggle={[Function]}
    />
    <ForwardRef(Button)
      className="components-color-palette__clear"
      isDefault={true}
      isSmall={true}
      onClick={[Function]}
      type="button"
    >
      Clear
    </ForwardRef(Button)>
  </div>
</div>
`;

exports[`ColorPalette Dropdown should render it correctly 1`] = `
<Dropdown
  className="components-color-palette__custom-color"
  contentClassName="components-color-palette__picker"
  renderContent={[Function]}
  renderToggle={[Function]}
/>
`;

exports[`ColorPalette should allow disabling custom color picker 1`] = `
<div
  className="components-color-palette"
>
  <div
    className="components-color-palette__item-wrapper"
    key="#f00"
  >
    <Tooltip
      text="red"
    >
      <button
        aria-label="Color: red"
        aria-pressed={true}
        className="components-color-palette__item is-active"
        onClick={[Function]}
        style={
          Object {
            "color": "#f00",
          }
        }
        type="button"
      />
    </Tooltip>
    <Dashicon
      icon="saved"
    />
  </div>
  <div
    className="components-color-palette__item-wrapper"
    key="#fff"
  >
    <Tooltip
      text="white"
    >
      <button
        aria-label="Color: white"
        aria-pressed={false}
        className="components-color-palette__item"
        onClick={[Function]}
        style={
          Object {
            "color": "#fff",
          }
        }
        type="button"
      />
    </Tooltip>
  </div>
  <div
    className="components-color-palette__item-wrapper"
    key="#00f"
  >
    <Tooltip
      text="Color code: #00f"
    >
      <button
        aria-label="Color code: #00f"
        aria-pressed={false}
        className="components-color-palette__item"
        onClick={[Function]}
        style={
          Object {
            "color": "#00f",
          }
        }
        type="button"
      />
    </Tooltip>
  </div>
  <div
    className="components-color-palette__custom-clear-wrapper"
  >
    <ForwardRef(Button)
      className="components-color-palette__clear"
      isDefault={true}
      isSmall={true}
      onClick={[Function]}
      type="button"
    >
      Clear
    </ForwardRef(Button)>
  </div>
</div>
`;

exports[`ColorPalette should render a dynamic toolbar of colors 1`] = `
<div
  className="components-color-palette"
>
  <div
    className="components-color-palette__item-wrapper"
    key="#f00"
  >
    <Tooltip
      text="red"
    >
      <button
        aria-label="Color: red"
        aria-pressed={true}
        className="components-color-palette__item is-active"
        onClick={[Function]}
        style={
          Object {
            "color": "#f00",
          }
        }
        type="button"
      />
    </Tooltip>
    <Dashicon
      icon="saved"
    />
  </div>
  <div
    className="components-color-palette__item-wrapper"
    key="#fff"
  >
    <Tooltip
      text="white"
    >
      <button
        aria-label="Color: white"
        aria-pressed={false}
        className="components-color-palette__item"
        onClick={[Function]}
        style={
          Object {
            "color": "#fff",
          }
        }
        type="button"
      />
    </Tooltip>
  </div>
  <div
    className="components-color-palette__item-wrapper"
    key="#00f"
  >
    <Tooltip
      text="Color code: #00f"
    >
      <button
        aria-label="Color code: #00f"
        aria-pressed={false}
        className="components-color-palette__item"
        onClick={[Function]}
        style={
          Object {
            "color": "#00f",
          }
        }
        type="button"
      />
    </Tooltip>
  </div>
  <div
    className="components-color-palette__custom-clear-wrapper"
  >
    <Dropdown
      className="components-color-palette__custom-color"
      contentClassName="components-color-palette__picker"
      renderContent={[Function]}
      renderToggle={[Function]}
    />
    <ForwardRef(Button)
      className="components-color-palette__clear"
      isDefault={true}
      isSmall={true}
      onClick={[Function]}
      type="button"
    >
      Clear
    </ForwardRef(Button)>
  </div>
</div>
`;
