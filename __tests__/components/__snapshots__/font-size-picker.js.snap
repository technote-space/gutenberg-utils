// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FontSizePicker with current value should not render 1`] = `
<FontSizePicker
  disableCustomFontSizes={true}
/>
`;

exports[`FontSizePicker with current value should open font select 1`] = `
<SlotFillProvider>
  <FontSizePicker
    fontSizes={
      Array [
        Object {
          "name": "small",
          "size": "10px",
          "slug": "small",
        },
        Object {
          "size": "16px",
          "slug": "normal",
        },
        Object {
          "size": "20px",
          "slug": "big",
        },
      ]
    }
    onChange={[MockFunction]}
    value="16px"
  >
    <BaseControl>
      <div
        className="components-base-control"
      >
        <div
          className="components-base-control__field"
        >
          <Component>
            <span
              className="components-base-control__label"
            >
              Font Size
            </span>
          </Component>
          <div
            className="components-font-size-picker__buttons"
          >
            <Dropdown
              className="components-font-size-picker__dropdown"
              contentClassName="components-font-size-picker__dropdown-content"
              position="bottom"
              renderContent={[Function]}
              renderToggle={[Function]}
            >
              <div
                className="components-font-size-picker__dropdown"
              >
                <ForwardRef(Button)
                  aria-expanded={true}
                  aria-label="Font size: Custom"
                  className="components-font-size-picker__selector"
                  isLarge={true}
                  onClick={[Function]}
                >
                  <button
                    aria-expanded={true}
                    aria-label="Font size: Custom"
                    className="components-button components-font-size-picker__selector is-button is-default is-large"
                    onClick={[Function]}
                    type="button"
                  >
                    Custom
                  </button>
                </ForwardRef(Button)>
                <Popover
                  className="components-font-size-picker__dropdown-content"
                  onClickOutside={[Function]}
                  onClose={[Function]}
                  position="bottom"
                >
                  <span>
                    <Fill
                      name="Popover"
                    >
                      <FillComponent
                        name="Popover"
                        registerFill={[Function]}
                        unregisterFill={[Function]}
                      >
                        <Portal
                          containerInfo={
                            <div>
                              <div
                                tabindex="-1"
                              >
                                <div>
                                  <div
                                    class="components-popover components-font-size-picker__dropdown-content is-bottom is-center components-animate__appear is-from-top"
                                    style=""
                                  >
                                    <div
                                      class="components-popover__content"
                                      tabindex="-1"
                                    >
                                      <div
                                        aria-orientation="vertical"
                                        role="menu"
                                      >
                                        <button
                                          aria-checked="false"
                                          class="components-button is-font-small"
                                          role="menuitemradio"
                                          type="button"
                                        >
                                          <span
                                            class="components-font-size-picker__dropdown-text-size"
                                            style="font-size: 10px;"
                                          >
                                            small
                                          </span>
                                        </button>
                                        <button
                                          aria-checked="true"
                                          class="components-button is-font-normal"
                                          role="menuitemradio"
                                          type="button"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="dashicon dashicons-saved"
                                            focusable="false"
                                            height="20"
                                            role="img"
                                            viewBox="0 0 20 20"
                                            width="20"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M15.3 5.3l-6.8 6.8-2.8-2.8-1.4 1.4 4.2 4.2 8.2-8.2"
                                            />
                                          </svg>
                                          <span
                                            class="components-font-size-picker__dropdown-text-size"
                                            style="font-size: 16px;"
                                          />
                                        </button>
                                        <button
                                          aria-checked="false"
                                          class="components-button is-font-big"
                                          role="menuitemradio"
                                          type="button"
                                        >
                                          <span
                                            class="components-font-size-picker__dropdown-text-size"
                                            style="font-size: 20px;"
                                          />
                                        </button>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          }
                        >
                          <WithConstrainedTabbing(WithFocusReturn(Component))>
                            <div
                              onKeyDown={[Function]}
                              tabIndex="-1"
                            >
                              <WithFocusReturn(Component)>
                                <FocusReturn
                                  focusHistory={Array []}
                                >
                                  <div
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                  >
                                    <Component
                                      focusHistory={Array []}
                                    >
                                      <clickOutside(PopoverDetectOutside)
                                        onClickOutside={[Function]}
                                      >
                                        <PopoverDetectOutside
                                          onClickOutside={[Function]}
                                        >
                                          <Animate
                                            options={
                                              Object {
                                                "origin": "top center",
                                              }
                                            }
                                            type="appear"
                                          >
                                            <IsolatedEventContainer
                                              className="components-popover components-font-size-picker__dropdown-content is-bottom is-center components-animate__appear is-from-top"
                                              onKeyDown={[Function]}
                                              style={
                                                Object {
                                                  "left": undefined,
                                                  "top": undefined,
                                                  "visibility": undefined,
                                                }
                                              }
                                            >
                                              <div
                                                className="components-popover components-font-size-picker__dropdown-content is-bottom is-center components-animate__appear is-from-top"
                                                onKeyDown={[Function]}
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "left": undefined,
                                                    "top": undefined,
                                                    "visibility": undefined,
                                                  }
                                                }
                                              >
                                                <div
                                                  className="components-popover__content"
                                                  style={
                                                    Object {
                                                      "maxHeight": undefined,
                                                      "maxWidth": undefined,
                                                    }
                                                  }
                                                  tabIndex="-1"
                                                >
                                                  <ForwardRef(NavigableMenu)>
                                                    <ForwardRef(NavigableContainer)
                                                      aria-orientation="vertical"
                                                      eventToOffset={[Function]}
                                                      onlyBrowserTabstops={false}
                                                      role="menu"
                                                      stopNavigationEvents={true}
                                                    >
                                                      <NavigableContainer
                                                        aria-orientation="vertical"
                                                        eventToOffset={[Function]}
                                                        forwardedRef={null}
                                                        onlyBrowserTabstops={false}
                                                        role="menu"
                                                        stopNavigationEvents={true}
                                                      >
                                                        <div
                                                          aria-orientation="vertical"
                                                          role="menu"
                                                        >
                                                          <ForwardRef(Button)
                                                            aria-checked={false}
                                                            className="is-font-small"
                                                            key="small"
                                                            onClick={[Function]}
                                                            role="menuitemradio"
                                                          >
                                                            <button
                                                              aria-checked={false}
                                                              className="components-button is-font-small"
                                                              onClick={[Function]}
                                                              role="menuitemradio"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="components-font-size-picker__dropdown-text-size"
                                                                style={
                                                                  Object {
                                                                    "fontSize": "10px",
                                                                  }
                                                                }
                                                              >
                                                                small
                                                              </span>
                                                            </button>
                                                          </ForwardRef(Button)>
                                                          <ForwardRef(Button)
                                                            aria-checked={true}
                                                            className="is-font-normal"
                                                            key="normal"
                                                            onClick={[Function]}
                                                            role="menuitemradio"
                                                          >
                                                            <button
                                                              aria-checked={true}
                                                              className="components-button is-font-normal"
                                                              onClick={[Function]}
                                                              role="menuitemradio"
                                                              type="button"
                                                            >
                                                              <Dashicon
                                                                icon="saved"
                                                              >
                                                                <SVG
                                                                  aria-hidden={true}
                                                                  className="dashicon dashicons-saved"
                                                                  focusable="false"
                                                                  height={20}
                                                                  role="img"
                                                                  viewBox="0 0 20 20"
                                                                  width={20}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="dashicon dashicons-saved"
                                                                    focusable="false"
                                                                    height={20}
                                                                    role="img"
                                                                    viewBox="0 0 20 20"
                                                                    width={20}
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <Path
                                                                      d="M15.3 5.3l-6.8 6.8-2.8-2.8-1.4 1.4 4.2 4.2 8.2-8.2"
                                                                    >
                                                                      <path
                                                                        d="M15.3 5.3l-6.8 6.8-2.8-2.8-1.4 1.4 4.2 4.2 8.2-8.2"
                                                                      />
                                                                    </Path>
                                                                  </svg>
                                                                </SVG>
                                                              </Dashicon>
                                                              <span
                                                                className="components-font-size-picker__dropdown-text-size"
                                                                style={
                                                                  Object {
                                                                    "fontSize": "16px",
                                                                  }
                                                                }
                                                              />
                                                            </button>
                                                          </ForwardRef(Button)>
                                                          <ForwardRef(Button)
                                                            aria-checked={false}
                                                            className="is-font-big"
                                                            key="big"
                                                            onClick={[Function]}
                                                            role="menuitemradio"
                                                          >
                                                            <button
                                                              aria-checked={false}
                                                              className="components-button is-font-big"
                                                              onClick={[Function]}
                                                              role="menuitemradio"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="components-font-size-picker__dropdown-text-size"
                                                                style={
                                                                  Object {
                                                                    "fontSize": "20px",
                                                                  }
                                                                }
                                                              />
                                                            </button>
                                                          </ForwardRef(Button)>
                                                        </div>
                                                      </NavigableContainer>
                                                    </ForwardRef(NavigableContainer)>
                                                  </ForwardRef(NavigableMenu)>
                                                </div>
                                              </div>
                                            </IsolatedEventContainer>
                                          </Animate>
                                        </PopoverDetectOutside>
                                      </clickOutside(PopoverDetectOutside)>
                                    </Component>
                                  </div>
                                </FocusReturn>
                              </WithFocusReturn(Component)>
                            </div>
                          </WithConstrainedTabbing(WithFocusReturn(Component))>
                        </Portal>
                      </FillComponent>
                    </Fill>
                  </span>
                </Popover>
              </div>
            </Dropdown>
            <input
              aria-label="Custom font size"
              className="components-range-control__number"
              onChange={[Function]}
              type="number"
              value="16px"
            />
            <ForwardRef(Button)
              className="components-color-palette__clear"
              disabled={false}
              isDefault={true}
              isSmall={true}
              onClick={[Function]}
              type="button"
            >
              <button
                className="components-button components-color-palette__clear is-button is-default is-small"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                Reset
              </button>
            </ForwardRef(Button)>
          </div>
        </div>
      </div>
    </BaseControl>
  </FontSizePicker>
  <Component>
    <Slot
      bubblesVirtually={true}
      name="Popover"
    >
      <SlotComponent
        bubblesVirtually={true}
        getFills={[Function]}
        name="Popover"
        registerSlot={[Function]}
        unregisterSlot={[Function]}
      >
        <div />
      </SlotComponent>
    </Slot>
  </Component>
</SlotFillProvider>
`;

exports[`FontSizePicker with current value should render font size picker 1`] = `
<SlotFillProvider>
  <FontSizePicker
    fontSizes={
      Array [
        Object {
          "name": "small",
          "size": "10px",
          "slug": "small",
        },
        Object {
          "size": "16px",
          "slug": "normal",
        },
        Object {
          "size": "20px",
          "slug": "big",
        },
      ]
    }
    onChange={[MockFunction]}
    value="16px"
  >
    <BaseControl>
      <div
        className="components-base-control"
      >
        <div
          className="components-base-control__field"
        >
          <Component>
            <span
              className="components-base-control__label"
            >
              Font Size
            </span>
          </Component>
          <div
            className="components-font-size-picker__buttons"
          >
            <Dropdown
              className="components-font-size-picker__dropdown"
              contentClassName="components-font-size-picker__dropdown-content"
              position="bottom"
              renderContent={[Function]}
              renderToggle={[Function]}
            >
              <div
                className="components-font-size-picker__dropdown"
              >
                <ForwardRef(Button)
                  aria-expanded={false}
                  aria-label="Font size: Custom"
                  className="components-font-size-picker__selector"
                  isLarge={true}
                  onClick={[Function]}
                >
                  <button
                    aria-expanded={false}
                    aria-label="Font size: Custom"
                    className="components-button components-font-size-picker__selector is-button is-default is-large"
                    onClick={[Function]}
                    type="button"
                  >
                    Custom
                  </button>
                </ForwardRef(Button)>
              </div>
            </Dropdown>
            <input
              aria-label="Custom font size"
              className="components-range-control__number"
              onChange={[Function]}
              type="number"
              value="16px"
            />
            <ForwardRef(Button)
              className="components-color-palette__clear"
              disabled={false}
              isDefault={true}
              isSmall={true}
              onClick={[Function]}
              type="button"
            >
              <button
                className="components-button components-color-palette__clear is-button is-default is-small"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                Reset
              </button>
            </ForwardRef(Button)>
          </div>
        </div>
      </div>
    </BaseControl>
  </FontSizePicker>
  <Component>
    <Slot
      bubblesVirtually={true}
      name="Popover"
    >
      <SlotComponent
        bubblesVirtually={true}
        getFills={[Function]}
        name="Popover"
        registerSlot={[Function]}
        unregisterSlot={[Function]}
      >
        <div />
      </SlotComponent>
    </Slot>
  </Component>
</SlotFillProvider>
`;

exports[`FontSizePicker with slider should render font size picker 1`] = `
<SlotFillProvider>
  <FontSizePicker
    fontSizes={
      Array [
        Object {
          "name": "small",
          "size": "10px",
          "slug": "small",
        },
        Object {
          "size": "16px",
          "slug": "normal",
        },
        Object {
          "size": "20px",
          "slug": "big",
        },
      ]
    }
    value="16px"
    withSlider={true}
  >
    <BaseControl>
      <div
        className="components-base-control"
      >
        <div
          className="components-base-control__field"
        >
          <Component>
            <span
              className="components-base-control__label"
            >
              Font Size
            </span>
          </Component>
          <div
            className="components-font-size-picker__buttons"
          >
            <Dropdown
              className="components-font-size-picker__dropdown"
              contentClassName="components-font-size-picker__dropdown-content"
              position="bottom"
              renderContent={[Function]}
              renderToggle={[Function]}
            >
              <div
                className="components-font-size-picker__dropdown"
              >
                <ForwardRef(Button)
                  aria-expanded={false}
                  aria-label="Font size: Custom"
                  className="components-font-size-picker__selector"
                  isLarge={true}
                  onClick={[Function]}
                >
                  <button
                    aria-expanded={false}
                    aria-label="Font size: Custom"
                    className="components-button components-font-size-picker__selector is-button is-default is-large"
                    onClick={[Function]}
                    type="button"
                  >
                    Custom
                  </button>
                </ForwardRef(Button)>
              </div>
            </Dropdown>
            <ForwardRef(Button)
              className="components-color-palette__clear"
              disabled={false}
              isDefault={true}
              isSmall={true}
              onClick={[Function]}
              type="button"
            >
              <button
                className="components-button components-color-palette__clear is-button is-default is-small"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                Reset
              </button>
            </ForwardRef(Button)>
          </div>
          <WithInstanceId(WithState(RangeControl))
            afterIcon="editor-textcolor"
            beforeIcon="editor-textcolor"
            className="components-font-size-picker__custom-input"
            label="Custom Size"
            max={100}
            min={12}
            value="16px"
          >
            <WithState(RangeControl)
              afterIcon="editor-textcolor"
              beforeIcon="editor-textcolor"
              className="components-font-size-picker__custom-input"
              instanceId={0}
              label="Custom Size"
              max={100}
              min={12}
              value="16px"
            >
              <RangeControl
                afterIcon="editor-textcolor"
                beforeIcon="editor-textcolor"
                className="components-font-size-picker__custom-input"
                currentInput={null}
                instanceId={0}
                label="Custom Size"
                max={100}
                min={12}
                setState={[Function]}
                value="16px"
              >
                <BaseControl
                  className="components-range-control components-font-size-picker__custom-input"
                  id="inspector-range-control-0"
                  label="Custom Size"
                >
                  <div
                    className="components-base-control components-range-control components-font-size-picker__custom-input"
                  >
                    <div
                      className="components-base-control__field"
                    >
                      <label
                        className="components-base-control__label"
                        htmlFor="inspector-range-control-0"
                      >
                        Custom Size
                      </label>
                      <Dashicon
                        icon="editor-textcolor"
                      >
                        <SVG
                          aria-hidden={true}
                          className="dashicon dashicons-editor-textcolor"
                          focusable="false"
                          height={20}
                          role="img"
                          viewBox="0 0 20 20"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-hidden="true"
                            className="dashicon dashicons-editor-textcolor"
                            focusable="false"
                            height={20}
                            role="img"
                            viewBox="0 0 20 20"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <Path
                              d="M13.23 15h1.9L11 4H9L5 15h1.88l1.07-3h4.18zm-1.53-4.54H8.51L10 5.6z"
                            >
                              <path
                                d="M13.23 15h1.9L11 4H9L5 15h1.88l1.07-3h4.18zm-1.53-4.54H8.51L10 5.6z"
                              />
                            </Path>
                          </svg>
                        </SVG>
                      </Dashicon>
                      <input
                        className="components-range-control__slider"
                        id="inspector-range-control-0"
                        max={100}
                        min={12}
                        onChange={[Function]}
                        type="range"
                        value=""
                      />
                      <Dashicon
                        icon="editor-textcolor"
                      >
                        <SVG
                          aria-hidden={true}
                          className="dashicon dashicons-editor-textcolor"
                          focusable="false"
                          height={20}
                          role="img"
                          viewBox="0 0 20 20"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-hidden="true"
                            className="dashicon dashicons-editor-textcolor"
                            focusable="false"
                            height={20}
                            role="img"
                            viewBox="0 0 20 20"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <Path
                              d="M13.23 15h1.9L11 4H9L5 15h1.88l1.07-3h4.18zm-1.53-4.54H8.51L10 5.6z"
                            >
                              <path
                                d="M13.23 15h1.9L11 4H9L5 15h1.88l1.07-3h4.18zm-1.53-4.54H8.51L10 5.6z"
                              />
                            </Path>
                          </svg>
                        </SVG>
                      </Dashicon>
                      <input
                        aria-label="Custom Size"
                        className="components-range-control__number"
                        max={100}
                        min={12}
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="number"
                        value="16px"
                      />
                    </div>
                  </div>
                </BaseControl>
              </RangeControl>
            </WithState(RangeControl)>
          </WithInstanceId(WithState(RangeControl))>
        </div>
      </div>
    </BaseControl>
  </FontSizePicker>
  <Component>
    <Slot
      bubblesVirtually={true}
      name="Popover"
    >
      <SlotComponent
        bubblesVirtually={true}
        getFills={[Function]}
        name="Popover"
        registerSlot={[Function]}
        unregisterSlot={[Function]}
      >
        <div />
      </SlotComponent>
    </Slot>
  </Component>
</SlotFillProvider>
`;

exports[`FontSizePicker with slider without current value should render font size picker 1`] = `
<SlotFillProvider>
  <FontSizePicker
    fontSizes={
      Array [
        Object {
          "name": "small",
          "size": "10px",
          "slug": "small",
        },
        Object {
          "size": "16px",
          "slug": "normal",
        },
        Object {
          "size": "20px",
          "slug": "big",
        },
      ]
    }
    withSlider={true}
  >
    <BaseControl>
      <div
        className="components-base-control"
      >
        <div
          className="components-base-control__field"
        >
          <Component>
            <span
              className="components-base-control__label"
            >
              Font Size
            </span>
          </Component>
          <div
            className="components-font-size-picker__buttons"
          >
            <Dropdown
              className="components-font-size-picker__dropdown"
              contentClassName="components-font-size-picker__dropdown-content"
              position="bottom"
              renderContent={[Function]}
              renderToggle={[Function]}
            >
              <div
                className="components-font-size-picker__dropdown"
              >
                <ForwardRef(Button)
                  aria-expanded={false}
                  aria-label="Font size: Normal"
                  className="components-font-size-picker__selector"
                  isLarge={true}
                  onClick={[Function]}
                >
                  <button
                    aria-expanded={false}
                    aria-label="Font size: Normal"
                    className="components-button components-font-size-picker__selector is-button is-default is-large"
                    onClick={[Function]}
                    type="button"
                  >
                    Normal
                  </button>
                </ForwardRef(Button)>
              </div>
            </Dropdown>
            <ForwardRef(Button)
              className="components-color-palette__clear"
              disabled={true}
              isDefault={true}
              isSmall={true}
              onClick={[Function]}
              type="button"
            >
              <button
                className="components-button components-color-palette__clear is-button is-default is-small"
                disabled={true}
                onClick={[Function]}
                type="button"
              >
                Reset
              </button>
            </ForwardRef(Button)>
          </div>
          <WithInstanceId(WithState(RangeControl))
            afterIcon="editor-textcolor"
            beforeIcon="editor-textcolor"
            className="components-font-size-picker__custom-input"
            label="Custom Size"
            max={100}
            min={12}
            value=""
          >
            <WithState(RangeControl)
              afterIcon="editor-textcolor"
              beforeIcon="editor-textcolor"
              className="components-font-size-picker__custom-input"
              instanceId={1}
              label="Custom Size"
              max={100}
              min={12}
              value=""
            >
              <RangeControl
                afterIcon="editor-textcolor"
                beforeIcon="editor-textcolor"
                className="components-font-size-picker__custom-input"
                currentInput={null}
                instanceId={1}
                label="Custom Size"
                max={100}
                min={12}
                setState={[Function]}
                value=""
              >
                <BaseControl
                  className="components-range-control components-font-size-picker__custom-input"
                  id="inspector-range-control-1"
                  label="Custom Size"
                >
                  <div
                    className="components-base-control components-range-control components-font-size-picker__custom-input"
                  >
                    <div
                      className="components-base-control__field"
                    >
                      <label
                        className="components-base-control__label"
                        htmlFor="inspector-range-control-1"
                      >
                        Custom Size
                      </label>
                      <Dashicon
                        icon="editor-textcolor"
                      >
                        <SVG
                          aria-hidden={true}
                          className="dashicon dashicons-editor-textcolor"
                          focusable="false"
                          height={20}
                          role="img"
                          viewBox="0 0 20 20"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-hidden="true"
                            className="dashicon dashicons-editor-textcolor"
                            focusable="false"
                            height={20}
                            role="img"
                            viewBox="0 0 20 20"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <Path
                              d="M13.23 15h1.9L11 4H9L5 15h1.88l1.07-3h4.18zm-1.53-4.54H8.51L10 5.6z"
                            >
                              <path
                                d="M13.23 15h1.9L11 4H9L5 15h1.88l1.07-3h4.18zm-1.53-4.54H8.51L10 5.6z"
                              />
                            </Path>
                          </svg>
                        </SVG>
                      </Dashicon>
                      <input
                        className="components-range-control__slider"
                        id="inspector-range-control-1"
                        max={100}
                        min={12}
                        onChange={[Function]}
                        type="range"
                        value=""
                      />
                      <Dashicon
                        icon="editor-textcolor"
                      >
                        <SVG
                          aria-hidden={true}
                          className="dashicon dashicons-editor-textcolor"
                          focusable="false"
                          height={20}
                          role="img"
                          viewBox="0 0 20 20"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-hidden="true"
                            className="dashicon dashicons-editor-textcolor"
                            focusable="false"
                            height={20}
                            role="img"
                            viewBox="0 0 20 20"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <Path
                              d="M13.23 15h1.9L11 4H9L5 15h1.88l1.07-3h4.18zm-1.53-4.54H8.51L10 5.6z"
                            >
                              <path
                                d="M13.23 15h1.9L11 4H9L5 15h1.88l1.07-3h4.18zm-1.53-4.54H8.51L10 5.6z"
                              />
                            </Path>
                          </svg>
                        </SVG>
                      </Dashicon>
                      <input
                        aria-label="Custom Size"
                        className="components-range-control__number"
                        max={100}
                        min={12}
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </BaseControl>
              </RangeControl>
            </WithState(RangeControl)>
          </WithInstanceId(WithState(RangeControl))>
        </div>
      </div>
    </BaseControl>
  </FontSizePicker>
  <Component>
    <Slot
      bubblesVirtually={true}
      name="Popover"
    >
      <SlotComponent
        bubblesVirtually={true}
        getFills={[Function]}
        name="Popover"
        registerSlot={[Function]}
        unregisterSlot={[Function]}
      >
        <div />
      </SlotComponent>
    </Slot>
  </Component>
</SlotFillProvider>
`;

exports[`FontSizePicker without current value should open font select 1`] = `
<SlotFillProvider>
  <FontSizePicker
    fontSizes={
      Array [
        Object {
          "name": "small",
          "size": "10px",
          "slug": "small",
        },
        Object {
          "size": "16px",
          "slug": "normal",
        },
        Object {
          "size": "20px",
          "slug": "big",
        },
      ]
    }
    onChange={[MockFunction]}
  >
    <BaseControl>
      <div
        className="components-base-control"
      >
        <div
          className="components-base-control__field"
        >
          <Component>
            <span
              className="components-base-control__label"
            >
              Font Size
            </span>
          </Component>
          <div
            className="components-font-size-picker__buttons"
          >
            <Dropdown
              className="components-font-size-picker__dropdown"
              contentClassName="components-font-size-picker__dropdown-content"
              position="bottom"
              renderContent={[Function]}
              renderToggle={[Function]}
            >
              <div
                className="components-font-size-picker__dropdown"
              >
                <ForwardRef(Button)
                  aria-expanded={true}
                  aria-label="Font size: Normal"
                  className="components-font-size-picker__selector"
                  isLarge={true}
                  onClick={[Function]}
                >
                  <button
                    aria-expanded={true}
                    aria-label="Font size: Normal"
                    className="components-button components-font-size-picker__selector is-button is-default is-large"
                    onClick={[Function]}
                    type="button"
                  >
                    Normal
                  </button>
                </ForwardRef(Button)>
                <Popover
                  className="components-font-size-picker__dropdown-content"
                  onClickOutside={[Function]}
                  onClose={[Function]}
                  position="bottom"
                >
                  <span>
                    <Fill
                      name="Popover"
                    >
                      <FillComponent
                        name="Popover"
                        registerFill={[Function]}
                        unregisterFill={[Function]}
                      >
                        <Portal
                          containerInfo={
                            <div>
                              <div
                                tabindex="-1"
                              >
                                <div>
                                  <div
                                    class="components-popover components-font-size-picker__dropdown-content is-bottom is-center components-animate__appear is-from-top"
                                    style=""
                                  >
                                    <div
                                      class="components-popover__content"
                                      tabindex="-1"
                                    >
                                      <div
                                        aria-orientation="vertical"
                                        role="menu"
                                      >
                                        <button
                                          aria-checked="false"
                                          class="components-button is-font-small"
                                          role="menuitemradio"
                                          type="button"
                                        >
                                          <span
                                            class="components-font-size-picker__dropdown-text-size"
                                            style="font-size: 10px;"
                                          >
                                            small
                                          </span>
                                        </button>
                                        <button
                                          aria-checked="true"
                                          class="components-button is-font-normal"
                                          role="menuitemradio"
                                          type="button"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="dashicon dashicons-saved"
                                            focusable="false"
                                            height="20"
                                            role="img"
                                            viewBox="0 0 20 20"
                                            width="20"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M15.3 5.3l-6.8 6.8-2.8-2.8-1.4 1.4 4.2 4.2 8.2-8.2"
                                            />
                                          </svg>
                                          <span
                                            class="components-font-size-picker__dropdown-text-size"
                                            style="font-size: 16px;"
                                          />
                                        </button>
                                        <button
                                          aria-checked="false"
                                          class="components-button is-font-big"
                                          role="menuitemradio"
                                          type="button"
                                        >
                                          <span
                                            class="components-font-size-picker__dropdown-text-size"
                                            style="font-size: 20px;"
                                          />
                                        </button>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          }
                        >
                          <WithConstrainedTabbing(WithFocusReturn(Component))>
                            <div
                              onKeyDown={[Function]}
                              tabIndex="-1"
                            >
                              <WithFocusReturn(Component)>
                                <FocusReturn
                                  focusHistory={Array []}
                                >
                                  <div
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                  >
                                    <Component
                                      focusHistory={Array []}
                                    >
                                      <clickOutside(PopoverDetectOutside)
                                        onClickOutside={[Function]}
                                      >
                                        <PopoverDetectOutside
                                          onClickOutside={[Function]}
                                        >
                                          <Animate
                                            options={
                                              Object {
                                                "origin": "top center",
                                              }
                                            }
                                            type="appear"
                                          >
                                            <IsolatedEventContainer
                                              className="components-popover components-font-size-picker__dropdown-content is-bottom is-center components-animate__appear is-from-top"
                                              onKeyDown={[Function]}
                                              style={
                                                Object {
                                                  "left": undefined,
                                                  "top": undefined,
                                                  "visibility": undefined,
                                                }
                                              }
                                            >
                                              <div
                                                className="components-popover components-font-size-picker__dropdown-content is-bottom is-center components-animate__appear is-from-top"
                                                onKeyDown={[Function]}
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "left": undefined,
                                                    "top": undefined,
                                                    "visibility": undefined,
                                                  }
                                                }
                                              >
                                                <div
                                                  className="components-popover__content"
                                                  style={
                                                    Object {
                                                      "maxHeight": undefined,
                                                      "maxWidth": undefined,
                                                    }
                                                  }
                                                  tabIndex="-1"
                                                >
                                                  <ForwardRef(NavigableMenu)>
                                                    <ForwardRef(NavigableContainer)
                                                      aria-orientation="vertical"
                                                      eventToOffset={[Function]}
                                                      onlyBrowserTabstops={false}
                                                      role="menu"
                                                      stopNavigationEvents={true}
                                                    >
                                                      <NavigableContainer
                                                        aria-orientation="vertical"
                                                        eventToOffset={[Function]}
                                                        forwardedRef={null}
                                                        onlyBrowserTabstops={false}
                                                        role="menu"
                                                        stopNavigationEvents={true}
                                                      >
                                                        <div
                                                          aria-orientation="vertical"
                                                          role="menu"
                                                        >
                                                          <ForwardRef(Button)
                                                            aria-checked={false}
                                                            className="is-font-small"
                                                            key="small"
                                                            onClick={[Function]}
                                                            role="menuitemradio"
                                                          >
                                                            <button
                                                              aria-checked={false}
                                                              className="components-button is-font-small"
                                                              onClick={[Function]}
                                                              role="menuitemradio"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="components-font-size-picker__dropdown-text-size"
                                                                style={
                                                                  Object {
                                                                    "fontSize": "10px",
                                                                  }
                                                                }
                                                              >
                                                                small
                                                              </span>
                                                            </button>
                                                          </ForwardRef(Button)>
                                                          <ForwardRef(Button)
                                                            aria-checked={true}
                                                            className="is-font-normal"
                                                            key="normal"
                                                            onClick={[Function]}
                                                            role="menuitemradio"
                                                          >
                                                            <button
                                                              aria-checked={true}
                                                              className="components-button is-font-normal"
                                                              onClick={[Function]}
                                                              role="menuitemradio"
                                                              type="button"
                                                            >
                                                              <Dashicon
                                                                icon="saved"
                                                              >
                                                                <SVG
                                                                  aria-hidden={true}
                                                                  className="dashicon dashicons-saved"
                                                                  focusable="false"
                                                                  height={20}
                                                                  role="img"
                                                                  viewBox="0 0 20 20"
                                                                  width={20}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="dashicon dashicons-saved"
                                                                    focusable="false"
                                                                    height={20}
                                                                    role="img"
                                                                    viewBox="0 0 20 20"
                                                                    width={20}
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <Path
                                                                      d="M15.3 5.3l-6.8 6.8-2.8-2.8-1.4 1.4 4.2 4.2 8.2-8.2"
                                                                    >
                                                                      <path
                                                                        d="M15.3 5.3l-6.8 6.8-2.8-2.8-1.4 1.4 4.2 4.2 8.2-8.2"
                                                                      />
                                                                    </Path>
                                                                  </svg>
                                                                </SVG>
                                                              </Dashicon>
                                                              <span
                                                                className="components-font-size-picker__dropdown-text-size"
                                                                style={
                                                                  Object {
                                                                    "fontSize": "16px",
                                                                  }
                                                                }
                                                              />
                                                            </button>
                                                          </ForwardRef(Button)>
                                                          <ForwardRef(Button)
                                                            aria-checked={false}
                                                            className="is-font-big"
                                                            key="big"
                                                            onClick={[Function]}
                                                            role="menuitemradio"
                                                          >
                                                            <button
                                                              aria-checked={false}
                                                              className="components-button is-font-big"
                                                              onClick={[Function]}
                                                              role="menuitemradio"
                                                              type="button"
                                                            >
                                                              <span
                                                                className="components-font-size-picker__dropdown-text-size"
                                                                style={
                                                                  Object {
                                                                    "fontSize": "20px",
                                                                  }
                                                                }
                                                              />
                                                            </button>
                                                          </ForwardRef(Button)>
                                                        </div>
                                                      </NavigableContainer>
                                                    </ForwardRef(NavigableContainer)>
                                                  </ForwardRef(NavigableMenu)>
                                                </div>
                                              </div>
                                            </IsolatedEventContainer>
                                          </Animate>
                                        </PopoverDetectOutside>
                                      </clickOutside(PopoverDetectOutside)>
                                    </Component>
                                  </div>
                                </FocusReturn>
                              </WithFocusReturn(Component)>
                            </div>
                          </WithConstrainedTabbing(WithFocusReturn(Component))>
                        </Portal>
                      </FillComponent>
                    </Fill>
                  </span>
                </Popover>
              </div>
            </Dropdown>
            <input
              aria-label="Custom font size"
              className="components-range-control__number"
              onChange={[Function]}
              type="number"
              value=""
            />
            <ForwardRef(Button)
              className="components-color-palette__clear"
              disabled={true}
              isDefault={true}
              isSmall={true}
              onClick={[Function]}
              type="button"
            >
              <button
                className="components-button components-color-palette__clear is-button is-default is-small"
                disabled={true}
                onClick={[Function]}
                type="button"
              >
                Reset
              </button>
            </ForwardRef(Button)>
          </div>
        </div>
      </div>
    </BaseControl>
  </FontSizePicker>
  <Component>
    <Slot
      bubblesVirtually={true}
      name="Popover"
    >
      <SlotComponent
        bubblesVirtually={true}
        getFills={[Function]}
        name="Popover"
        registerSlot={[Function]}
        unregisterSlot={[Function]}
      >
        <div />
      </SlotComponent>
    </Slot>
  </Component>
</SlotFillProvider>
`;

exports[`FontSizePicker without current value should render font size picker 1`] = `
<SlotFillProvider>
  <FontSizePicker
    fontSizes={
      Array [
        Object {
          "name": "small",
          "size": "10px",
          "slug": "small",
        },
        Object {
          "size": "16px",
          "slug": "normal",
        },
        Object {
          "size": "20px",
          "slug": "big",
        },
      ]
    }
    onChange={[MockFunction]}
  >
    <BaseControl>
      <div
        className="components-base-control"
      >
        <div
          className="components-base-control__field"
        >
          <Component>
            <span
              className="components-base-control__label"
            >
              Font Size
            </span>
          </Component>
          <div
            className="components-font-size-picker__buttons"
          >
            <Dropdown
              className="components-font-size-picker__dropdown"
              contentClassName="components-font-size-picker__dropdown-content"
              position="bottom"
              renderContent={[Function]}
              renderToggle={[Function]}
            >
              <div
                className="components-font-size-picker__dropdown"
              >
                <ForwardRef(Button)
                  aria-expanded={false}
                  aria-label="Font size: Normal"
                  className="components-font-size-picker__selector"
                  isLarge={true}
                  onClick={[Function]}
                >
                  <button
                    aria-expanded={false}
                    aria-label="Font size: Normal"
                    className="components-button components-font-size-picker__selector is-button is-default is-large"
                    onClick={[Function]}
                    type="button"
                  >
                    Normal
                  </button>
                </ForwardRef(Button)>
              </div>
            </Dropdown>
            <input
              aria-label="Custom font size"
              className="components-range-control__number"
              onChange={[Function]}
              type="number"
              value=""
            />
            <ForwardRef(Button)
              className="components-color-palette__clear"
              disabled={true}
              isDefault={true}
              isSmall={true}
              onClick={[Function]}
              type="button"
            >
              <button
                className="components-button components-color-palette__clear is-button is-default is-small"
                disabled={true}
                onClick={[Function]}
                type="button"
              >
                Reset
              </button>
            </ForwardRef(Button)>
          </div>
        </div>
      </div>
    </BaseControl>
  </FontSizePicker>
  <Component>
    <Slot
      bubblesVirtually={true}
      name="Popover"
    >
      <SlotComponent
        bubblesVirtually={true}
        getFills={[Function]}
        name="Popover"
        registerSlot={[Function]}
        unregisterSlot={[Function]}
      >
        <div />
      </SlotComponent>
    </Slot>
  </Component>
</SlotFillProvider>
`;
